" This is for general normal mappings. There might be more normal mappings for specific topics

" this is to override 0 so that it goes to the first non white character.
nmap 0 ^
" Save with ctrl+s
nmap <C-s> :w<CR>

" Move up and down by visible lines if current line is wrapped
nmap j gj
nmap k gk
vmap <D-j> gj
vmap <D-k> gk
vmap <D-4> g$
vmap <D-6> g^
vmap <D-0> g^
nmap <D-4> g$
nmap <D-6> g^
nmap <D-0> g^

" Write file"
nmap <leader>w :w<cr>
nnoremap <Left> :echoe "Use h"<CR>

" Get off my lawn
nnoremap <Right> :echoa "Use l"<CR>
nmap <Up> [e
nmap <Down> ]e
" Bubble multiple lines
vmap <Up> [egv
vmap <Down> ]egv
" Visually select the text that was last edited/pasted
nmap gV `[v`]

" Split edit your vimrc. Type space, v, r in sequence to trigger
nmap <leader>vr :sp $MYVIMRC<cr>

" Source (reload) your vimrc. Type space, s, o in sequence to trigger
nmap <leader>so :source $MYVIMRC<cr>

" Pre-populate a split command with the current directory
nmap <leader>v :vnew <C-r>=escape(expand("%:p:h"), ' ') . '/'<cr>

" Originally, this was with :h only, but i prefer to see what is the name
" of the directory I am in. (instead of './')
cnoremap %% <C-R>=fnameescape(expand('%:p:h')).'/'<cr>
map <leader>ew :e %%
map <leader>es :sp %%
map <leader>ev :vsp %%
map <leader>et :tabe %%

" Second version, with :p:h and withoth the full path
" map <leader>ew :e <C-R>=expand("%:p:h") . "/" <CR>
" map <leader>es :sp <C-R>=expand("%:p:h") . "/" <CR>
" map <leader>ev :vsp <C-R>=expand("%:p:h") . "/" <CR>
" map <leader>et :tabe <C-R>=expand("%:p:h") . "/" <CR>
" Edit your vimrc in a new tab
nmap <leader>vi :tabedit ~/.vimrc<cr>

" Copy the entire buffer into the system register
nmap <leader>co ggVG*y

" Edit the db/schema.rb Rails file in a split
nmap <leader>sc :split db/schema.rb<cr>

" Indent all file
map <leader>i mmgg=G`m

" Command aliases for typoed commands (accidentally holding shift too long)
"command! Q q " Bind :Q to :q
command! Q q! " Bind :Q to :q
command! QA qall
command! Qall qall
command! E e

" vim:ft=vim

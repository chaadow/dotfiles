" Windows mappings and autocommands
" And visual settings

	" zoom a vim pane, <C-w>= to re-balance
	 nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
	 nnoremap <leader>= :wincmd =<cr>

	" automatically rebalance windows on vim resize
	autocmd VimResized * :wincmd =

	" more natural splits
	set splitbelow
	set splitright

	" Easy access to maximizing
	nnoremap <C-_> <C-w>_

	" Use visual bell instead of beeping"
	 set vb

 " Listchars settings
 set listchars=nbsp:⦸                  " CIRCLED REVERSE SOLIDUS (U+29B8, UTF-8: E2 A6 B8)
 set listchars+=tab:▷┅                 " WHITE RIGHT-POINTING TRIANGLE (U+25B7, UTF-8: E2 96 B7)
                                       " + BOX DRAWINGS HEAVY TRIPLE DASH HORIZONTAL (U+2505, UTF-8: E2 94 85)
 set listchars+=extends:»              " RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (U+00BB, UTF-8: C2 BB)
 set listchars+=precedes:«             " LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (U+00AB, UTF-8: C2 AB)
 set listchars+=trail:•                " BULLET (U+2022, UTF-8: E2 80 A2)
 set nojoinspaces                      " don't autoinsert two spaces after '.', '?', '!' for join command

	highlight ColorColumn ctermbg=25625625
	" set textwidth=80
	" set colorcolumn=+1,+2,+3,+4

	"https://github.com/thoughtstream/Damian-Conway-s-Vim-Setup/blob/master/.vimrc#L1415

	function! MarkMargin (on)
	    if exists('b:MarkMargin')
	        try
	            call matchdelete(b:MarkMargin)
	        catch /./
	        endtry
	        unlet b:MarkMargin
	    endif
	    if a:on
	        let b:MarkMargin = matchadd('ColorColumn', '\%81v\s*\S', 100)
	    endif
	endfunction

	augroup MarkMargin
	    autocmd!
	    autocmd  BufEnter  *       :call MarkMargin(1)
	    "autocmd  BufEnter  *.vp*   :call MarkMargin(0)
	augroup END

	map <leader>b :call ToggleBackground()<CR>
	function! ToggleBackground()
	    if &background == "light"
	        set background=dark
	    else
	        set background=light
	    endif
	endfunction

" vim:ft=vim

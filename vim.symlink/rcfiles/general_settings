" scriptencoding utf-8
" General configurations
"------------------------

set nocompatible                " Don't maintain compat with Vi.
set hidden                      " Allow buffer change w/o saving
set autoread                    " Load file from disk, ie for git reset
set nocompatible                " Not concerned with vi compatibility
set secure                      " Limit what modelines and autocmds can do
set lazyredraw                  " Don't update while executing macros
set backspace=indent,eol,start  " Sane backspace behavior
set history=1000                " Remember last 1000 commands
set scrolloff=4                 " Keep at least 4 lines below cursor
set cpoptions+=$

set list  " Shows invisible characters
" set showcmd  " Show the current command in the footer

if has('linebreak')
  let &showbreak='â¤· '                 " ARROW POINTING DOWNWARDS THEN CURVING RIGHTWARDS (U+2937, UTF-8: E2 A4 B7)
  set breakindent                     " indent wrapped lines to match start
  if exists('&breakindentopt')
    set breakindentopt=shift:2        " emphasize broken lines by indenting them
  endif
  set linebreak
endif

set expandtab                   " Convert <tab> to spaces (2 or 4)
set tabstop=2                   " Two spaces per tab as default

set shiftwidth=2                " override with per filteype
set softtabstop=2               " specific settings via autocmd
set shiftround                  " always indent by multiple of shiftwidth
set smarttab                    " <tab>/<BS> indent/dedent in leading whitespace

set autowrite                   " write for me when I take any action
set complete=.,w,b,u,t,i,kspell " Add the i and kspell for dictionary. Useful for writing essays or when you don't know how a certain word is spelled.

set relativenumber
if v:version > 703
  set number " hybrid relative and absolute for current line
endif
set re=1



" Disable sound/visual bell on errors
" May need additional config about audible bell
set t_vb=

if exists('&belloff')
  set belloff=all                     " never ring the bell for any reason
endif

" Set modeline to 1 to allow rcfiles to be recognized as vim files
set modelines=1


" I save constantly and hate swap files in my prject dirs
set nobackup " get rid of annoying ~file
set nowritebackup
set noswapfile

" Persistent undo
let undodir = expand('~/.undo-vim')
if !isdirectory(undodir)
  call mkdir(undodir)
endif
set undodir=~/.undo-vim//
set undofile " Create FILE.un~ files for persistent undo

if has('mksession')
  if isdirectory('~/local/.vim/tmp')
    set viewdir=~/local/.vim/tmp/view
  else
    set viewdir=~/.vim/tmp/view       " override ~/.vim/view default
  endif
  set viewoptions=cursor,folds        " save/restore just these (with `:{mk,load}view`)
endif

set updatecount=80                    " update swapfiles every 80 typed chars
set updatetime=2000                   " same as YCM

if has('viminfo')
  if exists('$SUDO_USER')
    set viminfo=                      " don't create root-owned files
  else
    if isdirectory('~/local/.vim/tmp')
      set viminfo+=n~/local/.vim/tmp/viminfo
    else
      set viminfo+=n~/.vim/tmp/viminfo " override ~/.viminfo default
    endif

    if !empty(glob('~/.vim/tmp/viminfo'))
      if !filereadable(expand('~/.vim/tmp/viminfo'))
        echoerr 'warning: ~/.vim/tmp/viminfo exists but is not readable'
      endif
    endif
  endif
endif

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" vim:ft=vim
